% Copyright (c) 2017, Christopher Mark Gore,
% Soli Deo Gloria,
% All rights reserved.
%
% 2317 South River Road, Saint Charles, Missouri 63303 USA.
% Web: http://cgore.com
% Email: cgore@cgore.com
%
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions are met:
%
%     * Redistributions of source code must retain the above copyright
%       notice, this list of conditions and the following disclaimer.
%
%     * Redistributions in binary form must reproduce the above copyright
%       notice, this list of conditions and the following disclaimer in the
%       documentation and/or other materials provided with the distribution.
%
%     * Neither the name of Christopher Mark Gore nor the names of other
%       contributors may be used to endorse or promote products derived from
%       this software without specific prior written permission.
%
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
% AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
% IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
% ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
% LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
% CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
% SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
% INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
% CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
% ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
% POSSIBILITY OF SUCH DAMAGE.

\documentclass{seminar}

\usepackage{fixltx2e} % Bugfixes for LaTeX 2e
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsthm}
\usepackage{graphicx}
\usepackage[usenames,dvipsnames]{xcolor}
\usepackage{librebaskerville} % Baskerville font
\usepackage{amsfonts}
\usepackage{listings}
\usepackage[dvips]{pstricks}
\usepackage{relsize}
\usepackage{textcomp}
\usepackage[normalem]{ulem}
\usepackage{wasysym}
\usepackage{dirtree}
\usepackage{float}
\usepackage{wrapfig}
\usepackage{pifont}
\usepackage{tikz}

\usetikzlibrary{chains,matrix,positioning,shapes,shadows,arrows,arrows.meta}

\tikzstyle{arrow} = [thick,->,>=stealth]
\tikzstyle{roundangle} = [rectangle, rounded corners, text centered, draw=black, fill=blue!10]
\tikzstyle{cons} = [
  rectangle split,
  rectangle split horizontal,
  rectangle split parts = 2,
  rounded corners,
  draw=black,
  fill=white,
]
\newcommand{\carcdr}[1]{\node (#1) [cons] {car \nodepart{second} cdr};}
\newcommand{\dottedcons}[1]{\node (#1) [cons] {. \nodepart{second} .};}
\newcommand{\dottedconsX}[2]{\node (#1) [cons,#2] {. \nodepart{second} .};}
\newcommand{\dottedconsB}[2]{\dottedconsX{#1}{below of=#2}}
\newcommand{\dottedconsLB}[2]{\dottedconsX{#1}{below left of = #2}}
\newcommand{\dottedconsRB}[2]{\dottedconsX{#1}{below right of = #2}}
\newcommand{\roundangle}[2]{\node (#1) [roundangle] {#2};}
\newcommand{\roundangleX}[3]{\node (#1) [roundangle,#3] {#2};}
\newcommand{\carline}[2]{\draw [arrow] (#1.one south) -- (#2);}
\newcommand{\carlineX}[3]{\draw [arrow,#3] (#1.one south) -- (#2);}
\newcommand{\cdrline}[2]{\draw [arrow] (#1.two south) -- (#2);}

\usepackage{semcolor,slidesec}
\input{seminar.bug}
\input{seminar.bg2}
% \input{seminar.bg3} % TODO: why is this missing on OSX?

\definecolor{fillcolor}{rgb}{0.9,0.95,1.0}
\definecolor{linecolor}{rgb}{0.8,0.85,0.9}
\slideframe[\psset{fillcolor=fillcolor,linecolor=linecolor}]{scshadow}

\newcommand{\hc}{Blue}
\newcommand{\h}[1]{\slideheading{\textcolor{\hc}{#1}}}
\newcommand{\tq}[1]{\textcolor{Green}{\textbf{#1}}}
\newcommand{\tbd}[1]{\textcolor{Blue}{\textit{#1}}}
\newcommand{\TODO}{{\Huge \textcolor{Red}{\textbf{{TO DO}}}}}

\definecolor{commentcolor}{rgb}{0.1,0.1,0.8}
\definecolor{identifiercolor}{rgb}{0.3,0.3,0.3}
\definecolor{keywordcolor}{rgb}{0.1,0.5,0.1}
\definecolor{cexcolor}{rgb}{0.25,0.25,0.4}
\lstset{
  basicstyle=\ttfamily,
  language=Ruby,
  escapeinside={\%*}{*)},
  commentstyle=\itshape\color{commentcolor},
  identifierstyle=\color{identifiercolor},
  keywordstyle=\color{keywordcolor},
  upquote=true,
  numbers=left,
  numberstyle=\tiny\color{commentcolor},
  numbersep=5pt
}
\newcommand{\cex}[1]{\textcolor{cexcolor}{\textit{#1}}}

\newcommand{\shell}[1]{\texttt{\textbf{{\textcolor{Blue} \$}} #1}}

\newcommand{\xmark}{\textcolor{Red}{\ding{55}}}
\newcommand{\cmark}{\textcolor{Green}{\ding{51}}}

\newcommand{\SlideSection}[1]
{
  \begin{center}
    \textcolor{\hc}{\textbf{\emph{\Huge{#1}}}}
  \end{center}
}


\newcommand{\fullSlideImage}[1]{
  \begin{center}
    \includegraphics[width=4in,height=2.25in,keepaspectratio=true]{#1}
  \end{center}
}

\newcommand{\halfSlideImage}[1]{
  \includegraphics[width=2in,height=2.25in,keepaspectratio=true]{#1}
}

\newcommand{\rightSideImageName}{you-must-supply-the-image-name.eps}
\newenvironment{rightSideImage}[1]
{
  \renewcommand{\rightSideImageName}{#1}
  \begin{tabular}{lr}
    \begin{minipage}[b]{2in}
}
{
    \end{minipage}
    &
    \halfSlideImage{\rightSideImageName}
  \end{tabular}
}

\newcommand{\leftSideImageName}{you-must-supply-the-image-name.eps}
\newenvironment{leftSideImage}[1]
{
  \renewcommand{\leftSideImageName}{#1}
  \begin{tabular}{lr}
    \halfSlideImage{\leftSideImageName}
    &
    \begin{minipage}[b]{2in}
      \raggedright
}
{
    \end{minipage}
  \end{tabular}
}

\def\dout{\bgroup
 \markoverwith{\lower-0.2ex\hbox
 {\kern-.03em\vbox{\hrule width.2em\kern0.45ex\hrule}\kern-.03em}}%
 \ULon}
\MakeRobust\dout

\newpagestyle{cgore}{}{Chris Gore\hfil\thepage\hfil\texttt{cgore.com}}
\pagestyle{cgore}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\title{\psshadowbox{JRuby and the JVM}}
\author{Christopher Mark Gore\\
  \texttt{cgore.com}}
\date{Monday, May 8, {\smaller AD} 2017} % textsc doesn't seem to work for Baskerville.

\begin{document}

\raggedslides[0mm]


\begin{slide}
  \color{\hc}

  \begin{center}
    \includegraphics[height=1.25in]{stlruby.eps}
  \end{center}

  \maketitle

  \color{Black}
\end{slide}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{slide}
  \h{Ruby is my \dout{most} \dout{second} third favorite programming language of all time.}


  \begin{enumerate}
  \item My own super-awesome programming language, Teepee \textit{(but it's not that awesome just yet)}
  \item Common Lisp
  \item Ruby
  \item C
  \item Clojure
  \item[]
    \textellipsis
    \setcounter{enumi}{998}
  \item Java
  \end{enumerate}
\end{slide}


\begin{slide}
  \h{JRuby is Ruby, on the JVM.}

  \fullSlideImage{jruby-bird.eps}
\end{slide}


\begin{slide}
  \h{Ruby on the JVM?\\
    Why would we want Ruby on the JVM?}

  \fullSlideImage{java-yoda.eps}
\end{slide}


\begin{slide}
  \h{Because there's tons of great libraries for everything.}

  \fullSlideImage{shave-that-yak.eps}
l\end{slide}


\begin{slide}
  \h{I found this image on the internet that describes very accurately how JRuby works.}

  \fullSlideImage{jruby_compiler_monster.eps}
\end{slide}


\begin{slide}
  \h{Getting Started}

  \begin{enumerate}
  \item Download it from \texttt{http://jruby.org/download}\\
    \textellipsis or \texttt{brew install jruby} on OS X\\
    \textellipsis or \texttt{rvm install jruby} if you use RVM
  \item Run \texttt{jruby} from your shell
  \item Make code!
  \end{enumerate}
\end{slide}


\begin{slide}
  \h{CON: The JVM takes forever to start up}

\begin{verbatim}
chris@nephesh ~ $ time jruby -e "puts 'hi'"
hi

real	0m1.761s
user	0m4.800s
sys	0m0.235s
chris@nephesh ~ $ time ruby -e "puts 'hi'"
hi

real	0m0.595s
user	0m0.054s
sys	0m0.050s
\end{verbatim}
\end{slide}


\begin{slide}
  \h{CON: Until the JIT kicks in it's actually considerably slower than MRI.}
\end{slide}


\begin{slide}
  \h{CON: Even after the JIT kicks in, it's not really that much faster.}
\end{slide}


\begin{slide}
  \h{CON: THE JVM WANTS ALL OF YOUR RAM AND IT WANTS IT NOW.}

\begin{verbatim}
%CPU %MEM      VSZ    RSS  COMMAND
 0.0  0.1  2475044   9300  ruby -e sleep 60
%CPU %MEM      VSZ    RSS  COMMAND
 0.0  1.0  8325372 164520  ... org.jruby.Main -e sleep 60
\end{verbatim}

VSZ: virtual memory size, all memory that the process can access, including
memory that is swapped out and memory that is from shared libraries.

RSS: resident set size, how much memory is allocated to that process and is in RAM.
\end{slide}


\begin{slide}
  \h{No (practical) C extension support, just FFI and Java stuff.}
\end{slide}


\begin{slide}
  \h{PRO: It's often faster than MRI.}

  \fullSlideImage{rubykon_2_speedup1.eps}
  
  {\tiny\texttt{https://pragtob.wordpress.com\\
      /2017/01/24/benchmarking-a-go-ai-in-ruby-cruby-vs-rubinius-vs-jruby-vs-truffle-a-year-later/}}
\end{slide}


\begin{slide}
  \h{\textellipsis Although, nowhere near as fast as TruffleRuby apparently,
    also on the JVM.}

  \fullSlideImage{truffleruby.eps}

  {\tiny\texttt{http://chrisseaton.com/rubytruffle/}}
\end{slide}


\begin{slide}
  \h{So let's just use TruffleRuby, right?}

  \begin{itemize}
  \item No OpenSSL support
  \item No Nokogiri
  \item No ActiveRecord device drivers
  \item Only some of the Rails test suite passes
  \end{itemize}

  Maybe in a few years?
\end{slide}


\begin{slide}
  \SlideSection{Questions?}
\end{slide}

\end{document}
